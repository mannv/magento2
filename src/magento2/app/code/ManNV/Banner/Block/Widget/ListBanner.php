<?php

namespace ManNV\Banner\Block\Widget;

use Magento\Framework\App\ObjectManager;
use Magento\Framework\UrlInterface;
use Magento\Framework\View\Element\Template;
use Magento\Store\Model\StoreManagerInterface;
use Magento\Widget\Block\BlockInterface;
use ManNV\Banner\Model\ResourceModel\Banner\Collection as BannerCollection;

class ListBanner extends Template implements BlockInterface
{
    /**
     * @var BannerCollection
     */
    private $bannerCollection;

    /**
     * @var StoreManagerInterface|mixed
     */
    private $storeManager;

    public function __construct(
        Template\Context $context,
        array $data = []
    ) {

        $this->bannerCollection = ObjectManager::getInstance()->get(BannerCollection::class);
        $this->storeManager = ObjectManager::getInstance()->get(StoreManagerInterface::class);
        $this->setTemplate('widget.phtml');
        parent::__construct($context, $data);
    }

    protected function _beforeToHtml()
    {
        //->addFieldToFilter('id', ['eq' => 11])
        $result = $this->bannerCollection->getData();

        if (!empty($result)) {
            $bannerBasePath = ObjectManager::getInstance()->get('ManNV\Banner\BannerImageUpload')->getBasePath();
            $bannerPath = $this->storeManager->getStore()->getBaseUrl(UrlInterface::URL_TYPE_MEDIA) . $bannerBasePath;
            $result = array_map(function ($item) use ($bannerPath) {
                $item['image'] = $bannerPath . '/' . $item['image'];
                return $item;
            }, $result);
        }
        $this->setData('banners', $result);
        return parent::_beforeToHtml(); // TODO: Change the autogenerated stub
    }
}
